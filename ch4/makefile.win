#
# Build Your Own Programming Language, 2nd edition, Chapter 4 Windows makefile
#
# For testing purposes!
# You do not need "make" to run the examples from Chapter 4.
# I use "make" in order to regression-test and ensure that the code runs.
#
# On Windows one may need to set the CLASSPATH by whatever syntax one now
# uses for that. It varies by shell. It used to be
#
# set CLASSPATH=".;c:\users\Alfrede Newmann"
#
# where you would change Afrede Newmann to say whatever path
# leads to the directory above your ch4/ directory.
#
# On 10/31/23 with Java 21 I was able to just use
#
# set CLASSPATH=..
#

all: u j

u: trivial-u j0-u

trivial-u:
	uflex nnws.l
	iyacc -dd ns.y
	unicon trivial nnws ns ns_tab
	trivial dorrie3.in >dorrie.out
	diff dorrie.out dorrie3.std

j0-u:
	uflex javalex.l
	iyacc -dd j0gram.y
	unicon j0 javalex j0gram j0gram_tab yyerror
	j0 hello.java >hello.out
	diff hello.out hello.std

j: trivial-j j0-j

trivial-j:
	jflex nnws.l
	yacc -Jpackage=ch4 -Jyylex=ch4.lexer.yylex \
		-Jyyerror=ch4.yyerror.yyerror ns.y
	javac trivial.java Yylex.java Parser.java lexer.java \
		yyerror.java ParserVal.java
	java ch4.trivial dorrie3.in >dorrie.out
	diff dorrie.out dorrie3.std

j0-j:
	jflex javalex.l
	yacc -Jclass=parser -Jpackage=ch4 -Jyylex=ch4.j0.yylex\
		-Jyyerror=ch4.yyerror.yyerror j0gram.y
	javac parser.java Yylex.java j0.java parserVal.java \
		token.java yyerror.java
	java ch4.j0 hello.java > hello.out
	diff hello.out hello.std
